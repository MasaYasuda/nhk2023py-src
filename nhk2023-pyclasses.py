import math

class Vector:
  def __init__(self):
    self.move=[0,0,0,0]
    self.rot=[0,0,0,0]
  def calc_move(self,x,y):
    r = math.sqrt(x**2 + y**2) 
    if abs(r)<0.2:
      r=0
    r = max(-1, min(r, 1))
    theta = math.atan2(y, x) # rad
    
    x = r * math.cos(theta)
    y = r * math.sin(theta)
    self.move = [x - y, x + y, -x + y, -x - y]
    return
  
  def calc_rot(self,rot):
    if abs(rot)<0.2:
      rot=0
    rot = max(-1, min(rot, 1))
    self.rot = [rot,rot,rot,rot]
    return
  
class Motor:
  def __init__(self,type): 
    
    if type == "omni":
      self.__wheel_diameter = 0 # mm
      self.__omni_diagonal = 0 # mm
      self.__max_move_speed = 0 # m/s
      self.__max_rot_speed = 0 # rpm
      self.__compress_rate =0.5 # 0~1
      self.__max_wheel_speed = 0 #rpm
      self.__omni_enc_gear_ratio = [1,1,1,1] #符号付き encoderのほうが早く(多く)回る:　ratio>1
      
      self.omni_move_speed = [0,0,0,0] # rpm
      self.omni_rot_speed = [0,0,0,0] # rpm
      self.omni_speed = [0,0,0,0] # rpm
      self.omni_enc_target =[0,0,0,0] #rpm
   
    elif type == "roller":
      self.__roller_diameter = 0 # mm
      self.__max_spin_speed = 0 # m/s
      self.__roller_enc_gear_ratio = 1 #符号付き
      
      self.roller_speed = 0 # rpm
      self.roller_enc_target = 0
    
    ## FOR 4 OMNI WHEELS ########################
    
    def omni_setup(self,diamiter,diagonal,max_move,max_rot,max_wheel_speed,gear_ratio):
      self.__wheel_diameter = diamiter
      self.__omni_diagonal = diagonal
      self.__max_move_speed = max_move
      self.__max_rot_speed = max_rot
      self.__max_wheel_speed = max_wheel_speed
      self.__omni_enc_gear_ratio = gear_ratio
      
    def calc_move_speed(self,move): # move: generated by Vector.move()
      for i in range(0,4):
        self.omni_move_speed[i]=self.__max_move_speed * move[i] *30000 / self.__wheel_diameter /math.pi # N[rpm]=30*v[m/s]/(r[mm]*pi)
      return
    
    def calc_rot_speed(self,rot):
      for i in range(0,4):
        self.omni_rot_speed[i]=self.__max_rot_speed * rot[i]*self.__omni_diagonal/self.__wheel_diameter # v[m/s]=ω*r=ω'*r'
      return
    
    def compression_speed(self):
      check_ratio=1
      for i in range(0,4):
        self.omni_speed[i] = self.omni_move_speed[i] + self.omni_rot_speed[i]
        if self.omni_speed[i] > self.__max_wheel_speed:
          check_ratio = min[check_ratio , self.__max_wheel_speed/self.omni_speed[i] ]
      if check_ratio<1:
        for i in range(0,4):
          self.omni_speed[i] = check_ratio* (self.omni_move_speed[i] + self.omni_rot_speed[i])
      return
    
    def calc_omni_enc_target(self):
      for i in range(0,4):
        self.omni_enc_target[i] = self.__omni_enc_gear_ratio[i]*self.omni_speed[i]
      return
    
    ## FOR ROLLER #########################
      
    def roller_setup(self,diamiter,max_spin,gear_ratio):
      self.__roller_diameter = diamiter
      self.__max_spin_speed = max_spin
      self.__roller_enc_gear_ratio = gear_ratio
      
    def calc_roller_speed(self,spin): # spin: -1~1
      self.roller_speed=self.__max_spin_speed * spin *30000 / self.__roller_diameter /math.pi # N[rpm]=30*v[m/s]/(r[mm]*pi)
      return
    def calc_roller_enc_target(self):
      self.roller_enc_target = self.__roller_enc_gear_ratio * self.roller_speed
      return